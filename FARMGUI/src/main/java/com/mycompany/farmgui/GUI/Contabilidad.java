/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.farmgui.GUI;

import com.mycompany.farmgui.Clases.CabeceraFactura;
import com.mycompany.farmgui.Clases.Contabilidadd;
import com.mycompany.farmgui.Clases.Debe;
import com.mycompany.farmgui.Clases.Fecha;
import javax.swing.table.DefaultTableModel;
import com.mycompany.farmgui.Clases.General;
import com.mycompany.farmgui.Clases.Haber;
import com.mycompany.farmgui.Clases.Producto;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class Contabilidad extends javax.swing.JFrame {

    DefaultTableModel dft4=new DefaultTableModel();
    DefaultTableModel dft5=new DefaultTableModel();
    
    
    private General g1;
    Contabilidadd c1 = g1.getConta();
    public Contabilidad() {
       
        
      
        initComponents();
         g1 = new General();
        
        String tx[]={"Detalle","Monto","Fecha"};
        dft4.setColumnIdentifiers(tx);
        jTable2.setModel(dft4);
        
        String txt[]={"Detalle","Monto","Fecha"};
        dft5.setColumnIdentifiers(txt);
        jTable3.setModel(dft5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        agregarDebeHaberBT = new javax.swing.JButton();
        mostrarBalanceBT = new javax.swing.JButton();
        eliminarBT1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ingresarDebeHaberJP = new javax.swing.JPanel();
        ingresarHaber = new javax.swing.JLabel();
        ingresarHaber1 = new javax.swing.JLabel();
        descripcionHaberTF = new javax.swing.JTextField();
        ingresarHaber2 = new javax.swing.JLabel();
        montoHaberTF = new javax.swing.JTextField();
        añadirHaberBT = new javax.swing.JButton();
        ingresarHaber3 = new javax.swing.JLabel();
        ingresarHaber4 = new javax.swing.JLabel();
        ingresarHaber5 = new javax.swing.JLabel();
        detalleDebeTF = new javax.swing.JTextField();
        montoDebeTF = new javax.swing.JTextField();
        añadirDebeBT = new javax.swing.JButton();
        mostrarBalanceJP = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        ingresarHaber12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        borrarDebeBT = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        ingresarHaber13 = new javax.swing.JLabel();
        ingresarHaber14 = new javax.swing.JLabel();
        borrarHaberBT = new javax.swing.JButton();
        balanceTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(960, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        agregarDebeHaberBT.setBackground(new java.awt.Color(0, 102, 102));
        agregarDebeHaberBT.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        agregarDebeHaberBT.setForeground(new java.awt.Color(255, 255, 255));
        agregarDebeHaberBT.setText("Añadir Debe/Haber");
        agregarDebeHaberBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarDebeHaberBTActionPerformed(evt);
            }
        });

        mostrarBalanceBT.setBackground(new java.awt.Color(0, 102, 102));
        mostrarBalanceBT.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        mostrarBalanceBT.setForeground(new java.awt.Color(255, 255, 255));
        mostrarBalanceBT.setText("Balance");
        mostrarBalanceBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarBalanceBTActionPerformed(evt);
            }
        });

        eliminarBT1.setBackground(new java.awt.Color(0, 102, 102));
        eliminarBT1.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        eliminarBT1.setForeground(new java.awt.Color(255, 255, 255));
        eliminarBT1.setText("Regresar al menú");
        eliminarBT1.setAlignmentX(0.5F);
        eliminarBT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agregarDebeHaberBT, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(eliminarBT1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mostrarBalanceBT, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(agregarDebeHaberBT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(mostrarBalanceBT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(eliminarBT1)
                .addGap(55, 55, 55))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 600));

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 750, 80));

        jPanel3.setLayout(new java.awt.CardLayout());

        ingresarHaber.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber.setText("Ingresar Haber");

        ingresarHaber1.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber1.setText("Monto");

        descripcionHaberTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionHaberTFActionPerformed(evt);
            }
        });

        ingresarHaber2.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber2.setText("Descripción - Detalle");

        montoHaberTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montoHaberTFActionPerformed(evt);
            }
        });

        añadirHaberBT.setBackground(new java.awt.Color(204, 204, 204));
        añadirHaberBT.setFont(new java.awt.Font("Lucida Bright", 0, 12)); // NOI18N
        añadirHaberBT.setText("Añadir Haber");
        añadirHaberBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirHaberBTActionPerformed(evt);
            }
        });

        ingresarHaber3.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber3.setText("Ingresar Debe");

        ingresarHaber4.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber4.setText("Descripción - Detalle");

        ingresarHaber5.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber5.setText("Monto");

        detalleDebeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detalleDebeTFActionPerformed(evt);
            }
        });

        montoDebeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montoDebeTFActionPerformed(evt);
            }
        });

        añadirDebeBT.setBackground(new java.awt.Color(204, 204, 204));
        añadirDebeBT.setFont(new java.awt.Font("Lucida Bright", 0, 12)); // NOI18N
        añadirDebeBT.setText("Añadir Debe");
        añadirDebeBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirDebeBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ingresarDebeHaberJPLayout = new javax.swing.GroupLayout(ingresarDebeHaberJP);
        ingresarDebeHaberJP.setLayout(ingresarDebeHaberJPLayout);
        ingresarDebeHaberJPLayout.setHorizontalGroup(
            ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ingresarDebeHaberJPLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(añadirDebeBT, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingresarHaber4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(añadirHaberBT, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ingresarDebeHaberJPLayout.createSequentialGroup()
                        .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descripcionHaberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingresarHaber3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(detalleDebeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(montoDebeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingresarHaber5, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingresarHaber1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(montoHaberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ingresarHaber, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ingresarDebeHaberJPLayout.createSequentialGroup()
                    .addGap(71, 71, 71)
                    .addComponent(ingresarHaber2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(478, Short.MAX_VALUE)))
        );
        ingresarDebeHaberJPLayout.setVerticalGroup(
            ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ingresarDebeHaberJPLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ingresarHaber, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ingresarHaber1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descripcionHaberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(montoHaberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(añadirHaberBT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingresarHaber3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingresarHaber5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ingresarHaber4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detalleDebeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(montoDebeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(añadirDebeBT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(ingresarDebeHaberJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ingresarDebeHaberJPLayout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(ingresarHaber2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(396, Short.MAX_VALUE)))
        );

        jPanel3.add(ingresarDebeHaberJP, "card2");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        ingresarHaber12.setFont(new java.awt.Font("Lucida Bright", 0, 24)); // NOI18N
        ingresarHaber12.setText("Balance:");

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        borrarDebeBT.setText("Borrar Debe");
        borrarDebeBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarDebeBTActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        ingresarHaber13.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber13.setText("Debe");

        ingresarHaber14.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        ingresarHaber14.setText("Haber");

        borrarHaberBT.setText("Borrar Haber");
        borrarHaberBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarHaberBTActionPerformed(evt);
            }
        });

        balanceTF.setEditable(false);
        balanceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mostrarBalanceJPLayout = new javax.swing.GroupLayout(mostrarBalanceJP);
        mostrarBalanceJP.setLayout(mostrarBalanceJPLayout);
        mostrarBalanceJPLayout.setHorizontalGroup(
            mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mostrarBalanceJPLayout.createSequentialGroup()
                .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingresarHaber14, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                                    .addComponent(ingresarHaber13, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ingresarHaber12, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(balanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                                    .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3))
                                    .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                                            .addGap(35, 35, 35)
                                            .addComponent(borrarHaberBT, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(6, 6, 6))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mostrarBalanceJPLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(borrarDebeBT, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        mostrarBalanceJPLayout.setVerticalGroup(
            mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(ingresarHaber13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(balanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mostrarBalanceJPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ingresarHaber12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(borrarDebeBT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ingresarHaber14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mostrarBalanceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addGap(18, 33, Short.MAX_VALUE)
                        .addComponent(borrarHaberBT, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(mostrarBalanceJPLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel3.add(mostrarBalanceJP, "card3");

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 750, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void descripcionHaberTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionHaberTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionHaberTFActionPerformed

    private void montoHaberTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montoHaberTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_montoHaberTFActionPerformed

    private void detalleDebeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detalleDebeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detalleDebeTFActionPerformed

    private void montoDebeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montoDebeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_montoDebeTFActionPerformed

    private void añadirDebeBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirDebeBTActionPerformed
         String detalleDebe = detalleDebeTF.getText();
         String montoDebeStr = montoDebeTF.getText();
  
         if (!detalleDebe.trim().isEmpty()) {
            try {
        double montoDebe = Double.parseDouble(montoDebeStr);
        if(montoDebe>0){
            c1.agregarDebe(new Debe(new Fecha(0,0,0).getFechaActual(),detalleDebe,montoDebe));
             JOptionPane.showMessageDialog(null, "Debe ingresado con éxito a ", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese un número positivo",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
         
            } catch (NumberFormatException e) {
                 JOptionPane.showMessageDialog(this, "Formato incorrecto, ingrese un número",
                "Error", JOptionPane.ERROR_MESSAGE);
                    }
            }else  {
            JOptionPane.showMessageDialog(this, "Descripción vacía, ingrese un descripción",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
            
       
         
         
    }//GEN-LAST:event_añadirDebeBTActionPerformed

    private void añadirHaberBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirHaberBTActionPerformed
        String detalleHaber = descripcionHaberTF.getText();
        String montoHaberStr = montoHaberTF.getText();
        
        
        if (!detalleHaber.trim().isEmpty()) {
            try {
        double montoHaber = Double.parseDouble(montoHaberStr);
        if(montoHaber>0){
            c1.agregarHaber(new Haber(new Fecha(0,0,0).getFechaActual(),detalleHaber,montoHaber));
            JOptionPane.showMessageDialog(null, "Haber ingresado con éxito.", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese un número positivo.",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
         
            } catch (NumberFormatException e) {
                 JOptionPane.showMessageDialog(this, "Formato incorrecto, ingrese un número.",
                "Error", JOptionPane.ERROR_MESSAGE);
                    }
            }else  {
            JOptionPane.showMessageDialog(this, "Descripción vacía, ingrese una descripción.",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
            
        
       
        
        
    }//GEN-LAST:event_añadirHaberBTActionPerformed

    private void eliminarBT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBT1ActionPerformed
        Menu m1= new Menu();
        m1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_eliminarBT1ActionPerformed

    private void agregarDebeHaberBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarDebeHaberBTActionPerformed
      ingresarDebeHaberJP.setVisible(true);
     
         mostrarBalanceJP.setVisible(false);
      
    }//GEN-LAST:event_agregarDebeHaberBTActionPerformed

    private void mostrarBalanceBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarBalanceBTActionPerformed
       mostrarBalanceJP.setVisible(true);
       ingresarDebeHaberJP.setVisible(false);
       
         dft4.setRowCount(0);
      dft5.setRowCount(0);
        for (Debe deb : c1.getDebe()) {
        dft4.addRow(new Object[]{deb.getDetalle(), deb.getDebe(), deb.getFecha()});
        ((DefaultTableModel) jTable2.getModel()).fireTableDataChanged();
        }
        double dbf;
        dbf = c1.getTotalDebe();
        dft4.addRow(new Object[]{"Total Debe:",dbf , ""});
       
        for (Haber hab : c1.getHaber()) {
        dft5.addRow(new Object[]{hab.getDetalle(), hab.getHaber(), hab.getFecha()});
        ((DefaultTableModel) jTable3.getModel()).fireTableDataChanged();
    }   
        double hbf;
        hbf = c1.getTotalHaber();
        dft5.addRow(new Object[]{"Total Haber:",hbf , ""});
        
       balanceTF.setText(""+c1.calcularBeneficioPerdida());
        
    }//GEN-LAST:event_mostrarBalanceBTActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      dft4.setRowCount(0);
      dft5.setRowCount(0);
        for (Debe deb : c1.getDebe()) {
        dft4.addRow(new Object[]{deb.getDetalle(), deb.getDebe(), deb.getFecha()});
        ((DefaultTableModel) jTable2.getModel()).fireTableDataChanged();
        }
        double dbf;
        dbf = c1.getTotalDebe();
        dft4.addRow(new Object[]{"Total Debe:",dbf , ""});
       
        for (Haber hab : c1.getHaber()) {
        dft5.addRow(new Object[]{hab.getDetalle(), hab.getHaber(), hab.getFecha()});
        ((DefaultTableModel) jTable3.getModel()).fireTableDataChanged();
    }   
        double hbf;
        hbf = c1.getTotalHaber();
        dft5.addRow(new Object[]{"Total Haber:",hbf , ""});
        
         balanceTF.setText(""+c1.calcularBeneficioPerdida());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void borrarDebeBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarDebeBTActionPerformed
 int respuesta = JOptionPane.showConfirmDialog(this, "¿Está seguro de borrar este item?\nEsta operación será irreversible",
            "Confirmación", JOptionPane.YES_NO_OPTION);

    if (respuesta == JOptionPane.YES_OPTION) {
                 int filaSeleccionada = jTable2.getSelectedRow();
                
                // Verificar si se seleccionó una fila
                if (filaSeleccionada != -1) {
                    // Obtener el objeto Persona asociado a la fila seleccionada
                    c1.getDebe().remove(filaSeleccionada);
  
                }
                 dft4.setRowCount(0);
                for (Debe deb : c1.getDebe()) {
        dft4.addRow(new Object[]{deb.getDetalle(), deb.getDebe(), deb.getFecha()});
        ((DefaultTableModel) jTable2.getModel()).fireTableDataChanged();
        }
        double dbf;
        dbf = c1.getTotalDebe();
        dft4.addRow(new Object[]{"Total Debe:",dbf , ""});
        
        balanceTF.setText(""+c1.calcularBeneficioPerdida());
          
            JOptionPane.showMessageDialog(null, "Producto eliminado con Éxito.", "Confirmación"
                        , JOptionPane.INFORMATION_MESSAGE);
        
            
            
        }else {
     JOptionPane.showMessageDialog(null, "Operación cancelada.", "Confirmación"
                        , JOptionPane.INFORMATION_MESSAGE);
    }           
                // Obtener la fila seleccionada
         
    }//GEN-LAST:event_borrarDebeBTActionPerformed

    private void balanceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceTFActionPerformed

    private void borrarHaberBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarHaberBTActionPerformed
           
              int respuesta = JOptionPane.showConfirmDialog(this, "¿Está seguro de borrar este item?\nEsta operación será irreversible",
            "Confirmación", JOptionPane.YES_NO_OPTION);

    if (respuesta == JOptionPane.YES_OPTION) {
          // Obtener la fila seleccionada
                int filaSeleccionada = jTable3.getSelectedRow();
                
                // Verificar si se seleccionó una fila
                if (filaSeleccionada != -1) {
                    // Obtener el objeto Persona asociado a la fila seleccionada
                    c1.getHaber().remove(filaSeleccionada);
  
                }
                 dft5.setRowCount(0);
                for (Debe deb : c1.getDebe()) {
        dft5.addRow(new Object[]{deb.getDetalle(), deb.getDebe(), deb.getFecha()});
        ((DefaultTableModel) jTable2.getModel()).fireTableDataChanged();
        }
        double dbf;
        dbf = c1.getTotalHaber();
        dft5.addRow(new Object[]{"Total Haber:",dbf , ""});
        
        balanceTF.setText(""+c1.calcularBeneficioPerdida());
          
            JOptionPane.showMessageDialog(null, "Producto eliminado con Éxito.", "Confirmación"
                        , JOptionPane.INFORMATION_MESSAGE);
        
            
            
        }else {
     JOptionPane.showMessageDialog(null, "Operación cancelada.", "Confirmación"
                        , JOptionPane.INFORMATION_MESSAGE);
    }
        

    }//GEN-LAST:event_borrarHaberBTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Contabilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Contabilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Contabilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Contabilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Contabilidad().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarDebeHaberBT;
    private javax.swing.JButton añadirDebeBT;
    private javax.swing.JButton añadirHaberBT;
    private javax.swing.JTextField balanceTF;
    private javax.swing.JButton borrarDebeBT;
    private javax.swing.JButton borrarHaberBT;
    private javax.swing.JTextField descripcionHaberTF;
    private javax.swing.JTextField detalleDebeTF;
    private javax.swing.JButton eliminarBT1;
    private javax.swing.JPanel ingresarDebeHaberJP;
    private javax.swing.JLabel ingresarHaber;
    private javax.swing.JLabel ingresarHaber1;
    private javax.swing.JLabel ingresarHaber12;
    private javax.swing.JLabel ingresarHaber13;
    private javax.swing.JLabel ingresarHaber14;
    private javax.swing.JLabel ingresarHaber2;
    private javax.swing.JLabel ingresarHaber3;
    private javax.swing.JLabel ingresarHaber4;
    private javax.swing.JLabel ingresarHaber5;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField montoDebeTF;
    private javax.swing.JTextField montoHaberTF;
    private javax.swing.JButton mostrarBalanceBT;
    private javax.swing.JPanel mostrarBalanceJP;
    // End of variables declaration//GEN-END:variables
}
